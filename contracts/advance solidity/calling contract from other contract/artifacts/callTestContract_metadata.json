{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_testContractAddress",
						"type": "address"
					}
				],
				"name": "getX1",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_x",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract testContract",
						"name": "_test",
						"type": "address"
					}
				],
				"name": "getXandvalue1",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_x",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_testContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_x",
						"type": "uint256"
					}
				],
				"name": "setX1",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract testContract",
						"name": "_test",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_x",
						"type": "uint256"
					}
				],
				"name": "setX2",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract testContract",
						"name": "_testAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_x",
						"type": "uint256"
					}
				],
				"name": "setXAndEth",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/advance solidity/calling contract from other contract/calling-contract-from-other-practice.sol": "callTestContract"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/advance solidity/calling contract from other contract/calling-contract-from-other-practice.sol": {
			"keccak256": "0x04cc25b0a4bbb8151175185ae996c847ce33217fbbfc687f135536e99f104da0",
			"license": "MIT",
			"urls": [
				"bzz-raw://83785edb4baa9982837453d96131746f8286d2aa163f3b8f77fc03ed707e8063",
				"dweb:/ipfs/Qmbkxe3UuyX7mQpoZR1A1bPiKcmEhH2Y6t9Buw6CjP6J8P"
			]
		}
	},
	"version": 1
}