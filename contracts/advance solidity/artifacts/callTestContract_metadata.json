{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract testContract",
						"name": "_test",
						"type": "address"
					}
				],
				"name": "get1",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_x",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_test",
						"type": "address"
					}
				],
				"name": "getXAndValue1",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_x",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_valueInContract",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_testContractAdd",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_x",
						"type": "uint256"
					}
				],
				"name": "set1",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract testContract",
						"name": "_test",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_x",
						"type": "uint256"
					}
				],
				"name": "set2",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract testContract",
						"name": "_test",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_x",
						"type": "uint256"
					}
				],
				"name": "setXAndGetEth1",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/advance solidity/calling-smart-contract-from-other-con.sol": "callTestContract"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/advance solidity/calling-smart-contract-from-other-con.sol": {
			"keccak256": "0x051968ac6f84c632a85b7da049bc964f59b192b2ff4092f766613c8071d19abe",
			"license": "MIT",
			"urls": [
				"bzz-raw://5495efc35ca31f0adde8750ae6aaaa1d19155568b48294131f13e9eba835a234",
				"dweb:/ipfs/Qmb9yCZqW7ZnwYvmu19dvXgd9sZbnYUBPnNYi76bmC4EMy"
			]
		}
	},
	"version": 1
}